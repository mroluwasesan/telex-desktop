name: Build and Release MAUI App

on:
  push:
    tags:
      - 'v*.*.*' # Match version tags like v1.0.0

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore MauiApp1.sln

      - name: Build the solution for Android
        run: dotnet build MauiApp1.sln -c Release --no-restore -p:PublishTrimmed=False

      - name: Publish Android app
        run: dotnet publish MauiApp1/MauiApp1.csproj -c Release -f:net7.0-android -o ./output/android

      - name: Extract tag name
        id: extract_tag
        run: echo "TAG_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          body: |
            ## Changes in this release
            - Add your release notes here
          draft: false
          prerelease: false

      - name: Upload Android APK
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/android/MauiApp1.apk
          asset_name: MauiApp1.apk
          asset_content_type: application/vnd.android.package-archive




# # ********* #
# # >>>>>>> iOS Build <<<<<<< #
# # ********* #
#   maui-ios:
#     runs-on: macos-12
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0

#     #- uses: maxim-lobanov/setup-xcode@v1
#     #  with:
#     #    xcode-version: latest

#     - name: Setup .NET Core SDK
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet-version: '8.0.x'

#     - name: Generate version number using date and run number
#       id: version-creator
#       shell: bash
#       run: |
#         buildDay=⁠ date +%Y.%m%d ⁠
#         echo $buildDay
#         ver="${buildDay}.${GITHUB_RUN_NUMBER}.0"
#         echo $ver
#         echo "APP_VERSION=$ver" >> $GITHUB_ENV
#     - name: Install MAUI workloads (required for GitHub-hosted runners)
#       shell: pwsh
#       run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

#     - name: Restore NuGet packages
#       shell: bash
#       run: dotnet restore ${{ env.PROJECT_PATH }} #--configfile ${{ env.NUGETCONFIG_PATH }}

#     - name: Build MAUI iOS project
#       shell: bash
#       run: dotnet build ${{ env.PROJECT_PATH }} -c Debug --no-restore -p:PublishTrimmed=True -p:MtouchLink=SdkOnly


# # *********** #
# # >>>>>>> MacCatalyst Build <<<<<<< #
# # *********** #
#   maui-macos:
#     runs-on: macos-12
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0

#     #- uses: maxim-lobanov/setup-xcode@v1
#     #  with:
#     #    xcode-version: latest

#     - name: Setup .NET Core SDK
#       uses: actions/setup-dotnet@v4
#       with:
#         dotnet-version: '8.0.x'

#     - name: Generate version number using date and run number
#       id: version-creator
#       shell: bash
#       run: |
#         buildDay=⁠ date +%Y.%m%d ⁠
#         echo $buildDay
#         ver="${buildDay}.${GITHUB_RUN_NUMBER}.0"
#         echo $ver
#         echo "APP_VERSION=$ver" >> $GITHUB_ENV
#     - name: Install MAUI workloads (required for GitHub-hosted runners)
#       shell: pwsh
#       run: dotnet workload install maui --source https://api.nuget.org/v3/index.json

#     - name: Restore NuGet packages
#       shell: bash
#       run: dotnet restore ${{ env.PROJECT_PATH }} #--configfile ${{ env.NUGETCONFIG_PATH }}
    
#     - name: Build MAUI MacCatalyst project
#       shell: bash
#       run: dotnet build ${{ env.PROJECT_PATH }} -c Debug --no-restore -p:PublishTrimmed=True -p:MtouchLink=SdkOnly